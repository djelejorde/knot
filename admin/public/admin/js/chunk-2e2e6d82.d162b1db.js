(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2e2e6d82'], { '0401' (t, e, n) {}, '70dd' (t, e, n) { 'use strict'; n.r(e); const a = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', { attrs: { id: 'calendar' } }, [n('div', { attrs: { id: 'header' } }, [n('div', { attrs: { id: 'header-start' } }, [n('div', { ref: 'dropdown', attrs: { id: 'date' } }, [t._v(' ' + t._s(t.$t('months.' + t.monthNames[t.date.getMonth()])) + ' ' + t._s(t.date.getFullYear()) + ' '), n('transition', { attrs: { name: 'months' } }, [n('div', { directives: [{ name: 'show', rawName: 'v-show', value: t.showMonthSelect, expression: 'showMonthSelect' }], attrs: { id: 'date-select' } }, [n('div', { attrs: { id: 'date-header' } }, [n('button', { on: { click (e) { return t.decreaseYear() } } }, [n('v-icon', { attrs: { name: 'arrow_back' } })], 1), t._v(' ' + t._s(t.date.getFullYear()) + ' '), n('button', { on: { click (e) { return t.increaseYear() } } }, [n('v-icon', { attrs: { name: 'arrow_forward' } })], 1)]), n('div', { attrs: { id: 'date-months' } }, t._l(12, function (e) { return n('div', { key: e, class: t.date.getMonth() + 1 == e ? 'mark-month' : '', on: { click (n) { t.setMonth(t.monthDistance - t.date.getMonth() + (e - 1)) } } }, [t._v(' ' + t._s(t.monthNames[e - 1].substr(0, 3)) + ' ')]) }), 0)])])], 1), n('div', { attrs: { id: 'arrows' } }, [n('button', { on: { click (e) { return t.decreaseMonth() } } }, [n('v-icon', { staticClass: 'icon', attrs: { name: 'arrow_back' } })], 1), n('button', { on: { click (e) { return t.increaseMonth() } } }, [n('v-icon', { staticClass: 'icon', attrs: { name: 'arrow_forward' } })], 1)])]), n('div', { attrs: { id: 'header-end' } }, [n('div', { staticClass: 'button', class: { hidden: t.monthDistance == 0 }, attrs: { id: 'today' }, on: { click (e) { return t.resetMonth() } } }, [t._v(' ' + t._s(t.$t('layouts.calendar.today')) + ' ')])])]), n('div', { attrs: { id: 'display' } }, [n('transition', { attrs: { name: t.swipeTo } }, [n('Calendar', { key: t.monthDistance, attrs: { month: t.monthDistance, items: t.items }, on: { day: t.openPopup }, nativeOn: { wheel (e) { return t.scroll(e) } } })], 1)], 1), n('Popup', { attrs: { open: t.showPopup, parentdate: t.popupDate, parentevents: t.events }, on: { close (e) { t.showPopup = !1 } } })], 1) }; const i = []; const r = (n('4160'), n('fb6a'), n('ac1f'), n('466d'), n('159b'), n('ade3')); const s = n('c3ff'); const o = n.n(s); const c = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', { attrs: { id: 'view' } }, t._l(42, function (e) { return n('Day', { key: e, attrs: { display: t.display(e), week: t.renderWeek(e), date: t.renderDate(e), events: t.events(e) }, on: { popup (n) { t.$emit('day', t.getDate(e)) } }, nativeOn: { click (n) { t.$emit('day', t.getDate(e)) } } }) }), 1) }; const d = []; const u = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', { staticClass: 'day', class: { hidden: t.hidden, today: t.today } }, [n('div', { staticClass: 'header' }, [t.isWeek ? n('div', { staticClass: 'header-week' }, [t._v(t._s(t.week.substr(0, 3)))]) : t._e(), n('div', { staticClass: 'header-day' }, [t._v(t._s(t.date))])]), n('div', { staticClass: 'events' }, t._l(t.eventList, function (e) { return n('a', { key: e.id, on: { click (n) { return n.stopPropagation(), t.goToItem(e.id) } } }, [n('div', { staticClass: 'event', class: e.id == -1 ? 'event-more' : '', style: e.color, on: { click (n) { e.id == -1 && t.$emit('popup') } } }, [n('span', { staticClass: 'title' }, [t._v(t._s(e.title))]), n('span', { staticClass: 'time' }, [t._v(t._s(e.time.substr(0, 5)))])])]) }), 0)]) }; const h = []; const l = (n('a4d3'), n('99af'), n('4de4'), n('a9e3'), n('e439'), n('dbb4'), n('b64b'), n('2f62')); function p (t, e) { const n = Object.keys(t); if (Object.getOwnPropertySymbols) { let a = Object.getOwnPropertySymbols(t); e && (a = a.filter(function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable })), n.push.apply(n, a) } return n } function f (t) { for (let e = 1; e < arguments.length; e++) { var n = arguments[e] != null ? arguments[e] : {}; e % 2 ? p(Object(n), !0).forEach(function (e) { Object(r.a)(t, e, n[e]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : p(Object(n)).forEach(function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)) }) } return t } const v = { props: { week: { type: String, default: null }, display: { type: String, required: !0 }, date: { type: Number, required: !0 }, events: { type: Array, default () { return [] } } }, data () { return {} }, computed: f({}, Object(l.e)(['currentProjectKey']), { hidden () { return this.display == 'hidden' }, today () { return this.display == 'today' }, isWeek () { return this.week != null }, eventList () { if (this.events) { let t = this.events; let e = (this.$parent.innerHeight - 120) / 6; e -= 32, this.isWeek && (e -= 15), this.today && (e -= 5); const n = Math.floor(e / 22); return t.length > n && (t = t.slice(0, n - 1), t.push({ id: -1, title: this.$t('layouts.calendar.moreEvents', { amount: this.events.length - n + 1 }), time: '' })), t } } }), methods: { goToItem (t) { t !== -1 && this.$router.push('/'.concat(this.currentProjectKey, '/collections/').concat(this.$parent.$parent.collection, '/').concat(t)) } } }; const m = v; const g = (n('7137'), n('2877')); const y = Object(g.a)(m, u, h, !1, null, '0ce21240', null); const w = y.exports; const b = n('2ef0'); const _ = { components: { Day: w }, props: ['month', 'items'], data () { return { innerHeight: window.innerHeight } }, computed: { date () { let t = new Date(); return t = new Date(t.getFullYear(), t.getMonth() + this.month, 1), t }, monthBegin () { const t = new Date(this.date.getFullYear(), this.date.getMonth(), 1).getDay(); return t == 0 ? 7 : t }, monthLength () { return new Date(this.date.getFullYear(), this.date.getMonth() + 1, 0).getDate() }, today () { const t = new Date(); return t.getDate() } }, created () { const t = this; this.updateHeight = Object(b.throttle)(this.updateHeight, 100), window.addEventListener('resize', function () { t.updateHeight() }) }, destroyed () { const t = this; window.removeEventListener('resize', function () { t.updateHeight() }) }, methods: { events (t) { const e = new Date(this.date.getFullYear(), this.date.getMonth(), t - this.monthBegin + 1); return this.$parent.eventsAtDay(e) }, renderWeek (t) { return t < 8 ? this.$t('weeks.' + this.$parent.weekNames[t - 1]) : null }, renderDate (t) { const e = new Date(this.date.getFullYear(), this.date.getMonth(), t - this.monthBegin + 1); return e.getDate() }, getDate (t) { const e = new Date(this.date.getFullYear(), this.date.getMonth(), t - this.monthBegin + 1); return e }, display (t) { return t < this.monthBegin || t >= this.monthBegin + this.monthLength ? 'hidden' : this.month == 0 && t - this.monthBegin + 1 == this.today ? 'today' : t - this.monthBegin < this.monthLength ? 'default' : void 0 }, updateHeight () { this.innerHeight = window.innerHeight } } }; const D = _; const k = (n('a285'), Object(g.a)(D, c, d, !1, null, '46dc78c5', null)); const O = k.exports; const j = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('transition', { attrs: { name: 'popup' } }, [n('div', { directives: [{ name: 'show', rawName: 'v-show', value: t.open, expression: 'open' }], attrs: { id: 'wrapper' } }, [n('div', { attrs: { id: 'background' }, on: { click (e) { return t.close() } } }), n('div', { attrs: { id: 'popup' } }, [n('div', { attrs: { id: 'sidebar-header' } }, [t._v(' ' + t._s(t.$t('months.' + t.$parent.monthNames[t.date.getMonth()])) + ' ' + t._s(t.date.getFullYear()) + ' ')]), n('div', { attrs: { id: 'sidebar' }, on: { wheel: t.scroll } }, [n('transition', { attrs: { name: t.moveSidebar } }, [n('div', { attrs: { id: 'dates-container' } }, t._l(t.days, function (e) { return n('div', { key: e.date.getDate(), staticClass: 'dates', on: { click (n) { return t.changeDay(e.index) } } }, [n('span', { staticClass: 'dates-day' }, [t._v(t._s(t.weekname(e.date.getDay())))]), n('span', { staticClass: 'dates-date' }, [t._v(t._s(e.date.getDate()))]), n('div', { class: t.getEventCount(e.date) > 0 ? 'date-counter' : 'date-counter-hidden' }, [t._v(' ' + t._s(t.getEventCount(e.date)) + ' ')])]) }), 0)])], 1), n('div', { attrs: { id: 'header' } }, [n('span', [t._v(t._s(t.$t('layouts.calendar.events')))]), n('button', { on: { click: t.close } }, [n('v-icon', { attrs: { name: 'close' } })], 1)]), n('div', { attrs: { id: 'events' } }, [t._l(t.events, function (e) { return n('div', { key: e.title, staticClass: 'event', style: e.color, on: { click (n) { return t.goToItem(e.id) } } }, [n('span', [t._v(t._s(e.title))]), n('span', [t._v(t._s(e.time.substr(0, 5)))])]) }), t.getEventCount(t.date) == 0 ? n('div', { attrs: { id: 'events-none' } }, [n('span', [t._v(t._s(t.randomEmoji()))]), n('br'), n('br'), n('span', [t._v(t._s(t.$t('layouts.calendar.noEvents')))])]) : t._e()], 2), n('a', { attrs: { id: 'add', href: t.addItemURL } }, [n('v-icon', { attrs: { name: 'add' } })], 1)])])]) }; const M = []; function $ (t, e) { const n = Object.keys(t); if (Object.getOwnPropertySymbols) { let a = Object.getOwnPropertySymbols(t); e && (a = a.filter(function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable })), n.push.apply(n, a) } return n } function P (t) { for (let e = 1; e < arguments.length; e++) { var n = arguments[e] != null ? arguments[e] : {}; e % 2 ? $(Object(n), !0).forEach(function (e) { Object(r.a)(t, e, n[e]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : $(Object(n)).forEach(function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)) }) } return t } const C = { components: {}, props: { open: { type: Boolean, default: !1 }, parentdate: { type: Date, required: !0 }, parentevents: { type: Array, required: !0 } }, data () { return { moveSidebar: 'move-0', date: '' } }, computed: P({}, Object(l.e)(['currentProjectKey']), { days () { for (var t = new Array(), e = -4; e <= 4; e++) { const n = new Date(this.date.getFullYear(), this.date.getMonth(), this.date.getDate() + e); t.push({ date: n, index: e }) } return t }, events () { return this.$parent.eventsAtDay(this.date) }, addItemURL () { const t = this.$root._router.currentRoute.path; return '#' + t + '/+' } }), watch: { parentdate (t) { this.date = t } }, created () { this.date = this.parentdate, this.scroll = Object(b.throttle)(this.scroll, 150) }, methods: { weekname (t) { return this.$t('weeks.' + this.$parent.weekNames[t == 0 ? 6 : t - 1]).substr(0, 3) }, goToItem (t) { this.$router.push('/'.concat(this.currentProjectKey, '/collections/').concat(this.$parent.collection, '/').concat(t)) }, changeDay (t) { this.moveSidebar = 'move-' + t; const e = new Date(this.date.getFullYear(), this.date.getMonth(), this.date.getDate() + t); this.date = e, this.$parent.popupDate = e }, close () { this.$emit('close'), this.moveSidebar = 'move-0' }, getEventCount (t) { let e = 0; const n = this.$parent.viewOptions.date; const a = this.$parent.viewOptions.datetime; if (n || a) { for (let i = 0; i < this.parentevents.length; i++) { const r = this.parentevents[i]; let s = ''; s = a && a !== '__none__' ? new Date(r[a]) : new Date(r[n] + 'T00:00:00'), this.$parent.isSameDay(t, s) && e++ } return e } }, randomEmoji () { const t = ['(≧︿≦)', '¯\\(°_o)/¯', '(⌐⊙_⊙)', '( º﹃º )', '¯\\_(ツ)_/¯', '(·.·)', '\\(°Ω°)/']; const e = Math.floor(Math.random() * t.length); return t[e] }, scroll (t) { t.deltaY > 0 ? this.changeDay(1) : this.changeDay(-1) } } }; const E = C; const S = (n('cec0'), Object(g.a)(E, j, M, !1, null, 'bc565ce6', null)); const Y = S.exports; const F = { components: { Calendar: O, Popup: Y }, mixins: [o.a], props: ['items'], data () { return { monthDistance: 0, swipeTo: 'left', showPopup: !1, popupDate: new Date(), events: [], showMonthSelect: !1, monthNames: ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'], weekNames: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'] } }, computed: { date () { let t = new Date(); return t = new Date(t.getFullYear(), t.getMonth() + this.monthDistance, 1), t } }, watch: { date (t) { this.getData(t) }, viewOptions () { this.getData(this.date) } }, created () { this.getData(this.date), this.scroll = throttle(this.scroll, 200), document.addEventListener('click', this.documentClick), document.addEventListener('keypress', this.keyPress) }, destroyed () { document.removeEventListener('click', this.documentClick), document.removeEventListener('keypress', this.keyPress) }, methods: { getData (t) { const e = this; const n = this.viewOptions.date; const a = this.viewOptions.datetime; let i = ''; if (i = a && a !== '__none__' ? a : n, i && i !== '__none__') { const s = new Date(t.getFullYear(), t.getMonth() + 1, 0); const o = t.getFullYear() + '-' + (t.getMonth() + 1) + '-' + t.getDate() + ' ' + t.getHours() + ':' + t.getMinutes() + ':' + t.getSeconds(); const c = s.getFullYear() + '-' + (s.getMonth() + 1) + '-' + s.getDate() + ' ' + s.getHours() + ':' + s.getMinutes() + ':' + s.getSeconds(); const d = Object(r.a)({}, i, { between: o + ',' + c }); this.$api.getItems(this.$parent.collection, { fields: '*.*.*', filter: d }).then(function (t) { t.data.forEach(function (t) { t.to = 'test' }), e.events = t.data }).catch(function (t) { console.log(t) }) } }, increaseYear () { this.swipeTo = 'right', this.monthDistance += 12 }, decreaseYear () { this.swipeTo = 'left', this.monthDistance -= 12 }, increaseMonth () { this.swipeTo = 'right', this.monthDistance++ }, decreaseMonth () { this.swipeTo = 'left', this.monthDistance-- }, resetMonth () { this.swipeTo = this.monthDistance > 0 ? 'left' : 'right', this.monthDistance = 0 }, setMonth (t) { this.swipeTo = this.monthDistance - t > 0 ? 'left' : 'right', this.monthDistance = t }, openPopup (t) { this.showPopup = !0, this.popupDate = t }, eventsAtDay (t) { const e = []; const n = this.viewOptions.date; const a = this.viewOptions.datetime; const i = this.viewOptions.title; const r = this.viewOptions.time; const s = this.viewOptions.color; if ((n || a) && i) { for (let o = 0; o < this.events.length; o++) { const c = this.events[o]; let d = ''; let u = ''; if (a && a !== '__none__' ? (d = new Date(c[a]), u = r === '__none__' ? c[a].slice(-8) : c[r] && r != 0 ? c[r] : '') : (d = new Date(c[n] + 'T00:00:00'), u = c[r] && r != 0 ? c[r] : ''), d) { let h = c[s] || 'accent'; let l = 'background-color: '; if (h.match(/^\d{1,3},\d{1,3},\d{1,3}$/) ? l += 'rgb('.concat(h, ')') : h.match(/^#[0-9a-f]{3,6}$/i) ? l += h : l += 'var(--'.concat(h, ')'), h = l, this.isSameDay(t, d)) { const p = { id: c.id, title: c[i], to: c.__link__, time: u, color: h }; e.push(p) } } } return r != 0 && e.sort(this.compareTime), e } }, compareTime (t, e) { const n = this.viewOptions.time; if (t[n] == '' && e[n] == '') { return 0 } if (t[n] != '' && e[n] == '') { return -1 } if (t[n] == '' && e[n] != '') { return 1 } const a = new Date('1970-01-01T' + t[n]); const i = new Date('1970-01-01T' + e[n]); return a > i ? 1 : a < i ? -1 : 0 }, isSameDay (t, e) { return t.getFullYear() == e.getFullYear() && t.getMonth() == e.getMonth() && t.getDate() == e.getDate() }, documentClick (t) { const e = this.$refs.dropdown; const n = t.target; this.showMonthSelect = n === e && !this.showMonthSelect || e.contains(n) && n !== e }, keyPress (t) { switch (t.key) { case 'Escape':this.showPopup = !1; break; case 'ArrowRight':this.increaseMonth(); break; case 'ArrowLeft':this.decreaseMonth(); break; default:break } }, scroll (t) { t.deltaY > 0 ? this.increaseMonth() : this.decreaseMonth() } } }; const T = F; const L = (n('c0ba'), Object(g.a)(T, a, i, !1, null, 'efd311c2', null)); e.default = L.exports }, 7137 (t, e, n) { 'use strict'; const a = n('0401'); const i = n.n(a); i.a }, '7c7a' (t, e, n) {}, '9fc1' (t, e, n) {}, a285 (t, e, n) { 'use strict'; const a = n('e94b'); const i = n.n(a); i.a }, c0ba (t, e, n) { 'use strict'; const a = n('7c7a'); const i = n.n(a); i.a }, c3ff (t, e) { t.exports = { props: { primaryKeyField: { type: String, required: !0 }, fields: { type: Object, required: !0 }, items: { type: Array, default: () => [] }, viewOptions: { type: Object, default: () => ({}) }, viewQuery: { type: Object, default: () => ({}) }, loading: { type: Boolean, default: !1 }, lazyLoading: { type: Boolean, default: !1 }, selection: { type: Array, default: () => [] }, link: { type: String, default: null }, sortField: { type: String, default: null }, collection: { type: String, default: null } } } }, cec0 (t, e, n) { 'use strict'; const a = n('9fc1'); const i = n.n(a); i.a }, e94b (t, e, n) {} }])
// # sourceMappingURL=chunk-2e2e6d82.d162b1db.js.map
