(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-13145859'], { 1749 (e, t, n) { 'use strict'; n.r(t); const r = function () { const e = this; const t = e.$createElement; const n = e._self._c || t; return n('v-select', { attrs: { id: e.name, value: e.value, disabled: e.readonly, options: e.choices, placeholder: e.options.placeholder }, on: { input (t) { return e.$emit('input', t) } } }) }; const l = []; const i = (n('a4d3'), n('4de4'), n('4160'), n('e439'), n('dbb4'), n('b64b'), n('159b'), n('ade3')); const o = n('8db2'); const u = n.n(o); const a = n('2f62'); function c (e, t) { const n = Object.keys(e); if (Object.getOwnPropertySymbols) { let r = Object.getOwnPropertySymbols(e); t && (r = r.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable })), n.push.apply(n, r) } return n } function s (e) { for (let t = 1; t < arguments.length; t++) { var n = arguments[t] != null ? arguments[t] : {}; t % 2 ? c(Object(n), !0).forEach(function (t) { Object(i.a)(e, t, n[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : c(Object(n)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)) }) } return e } const f = { mixins: [u.a], computed: s({}, Object(a.e)({ interfaces (e) { return e.extensions.interfaces || {} } }), { choices () { const e = this; const t = {}; let n = Object.keys(this.interfaces); return !1 === this.options.relational && (n = n.filter(function (t) { return void 0 === e.interfaces[t].relation })), !1 === this.options.status && (n = n.filter(function (t) { return e.interfaces[t].types[0] !== 'status' })), n.forEach(function (n) { t[n] = e.$helpers.formatTitle(n) }), t } }) }; const p = f; const d = (n('bbe9'), n('2877')); const b = Object(d.a)(p, r, l, !1, null, '13d93c9e', null); t.default = b.exports }, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } }, a6e6 (e, t, n) {}, bbe9 (e, t, n) { 'use strict'; const r = n('a6e6'); const l = n.n(r); l.a } }])
// # sourceMappingURL=chunk-13145859.c7c7a6fe.js.map
