(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-02ec76db'], { '0812' (e, t, l) { 'use strict'; l.r(t); const n = function () { const e = this; const t = e.$createElement; const l = e._self._c || t; return l('div', { class: [e.options.style + '-style', { margin: e.options.margin }] }, [e.options.title ? l('h2', [e._v(e._s(e.options.title))]) : e._e(), e.options.hr ? l('hr') : e._e(), e.options.description ? l('p', [e._v(e._s(e.options.description))]) : e._e()]) }; const i = []; const u = l('8db2'); const r = l.n(u); const o = { mixins: [r.a] }; const a = o; const p = (l('0fb1'), l('2877')); const s = Object(p.a)(a, n, i, !1, null, '397e12f6', null); t.default = s.exports }, '0fb1' (e, t, l) { 'use strict'; const n = l('7680'); const i = l.n(n); i.a }, 7680 (e, t, l) {}, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } } }])
// # sourceMappingURL=chunk-02ec76db.b9f299ce.js.map
