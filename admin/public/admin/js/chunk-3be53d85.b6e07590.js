(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-3be53d85'], { '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } }, f608 (e, t, l) { 'use strict'; l.r(t); const n = function () { const e = this; const t = e.$createElement; const l = e._self._c || t; return l('div', [e._v(e._s(e.itemCount))]) }; const u = []; const a = l('8db2'); const i = l.n(a); const r = { name: 'ReadonlyManyToMany', mixins: [i.a], computed: { itemCount () { return this.$tc('item_count', (this.value || []).length, { count: (this.value || []).length }) } } }; const d = r; const o = l('2877'); const p = Object(o.a)(d, n, u, !1, null, null, null); t.default = p.exports } }])
// # sourceMappingURL=chunk-3be53d85.b6e07590.js.map
