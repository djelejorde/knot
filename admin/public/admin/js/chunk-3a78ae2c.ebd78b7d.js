(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-3a78ae2c'], { '0760' (t, e, n) { 'use strict'; const l = n('7d87'); const i = n.n(l); i.a }, '7d87' (t, e, n) {}, '8db2' (t, e) { t.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (t) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(t) } } } } }, '96c7' (t, e, n) { 'use strict'; n.r(e); const l = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', [n('v-icon', { staticClass: 'readonly-toggle-icon', attrs: { color: '--' + t.colorChange, name: t.icon } }), n('span', { style: { color: 'var(--' + t.colorChange + ')' } }, [t._v(t._s(t.textChange))])], 1) }; const i = []; const o = n('8db2'); const a = n.n(o); const u = { name: 'ReadonlyToggleIcon', mixins: [a.a], computed: { icon () { return this.value ? this.options.iconActive : this.options.iconInactive }, colorChange () { return this.value ? this.options.colorActive : this.options.colorInactive }, textChange () { return this.value ? this.options.textActive : this.options.textInactive } } }; const r = u; const c = (n('0760'), n('2877')); const s = Object(c.a)(r, l, i, !1, null, '3ac11b90', null); e.default = s.exports } }])
// # sourceMappingURL=chunk-3a78ae2c.ebd78b7d.js.map
