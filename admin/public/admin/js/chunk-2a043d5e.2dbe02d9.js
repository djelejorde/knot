(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2a043d5e'], { '66b1' (e, t, n) { 'use strict'; const l = n('70a3'); const a = n.n(l); a.a }, '70a3' (e, t, n) {}, '75f8' (e, t, n) { 'use strict'; n.r(t); const l = function () { const e = this; const t = e.$createElement; const n = e._self._c || t; return n('div', { staticClass: 'interface-radio-buttons subgrid' }, e._l(e.choices, function (t, l) { return n('v-radio', { key: l, attrs: { id: e.name + '-' + l, name: e.name, value: l, disabled: e.readonly, 'model-value': e.value, label: t }, on: { change (t) { return e.$emit('input', t) } } }) }), 1) }; const a = []; const i = n('8db2'); const u = n.n(i); const r = { name: 'InterfaceRadioButtons', mixins: [u.a], computed: { choices () { let e = this.options.choices; return e ? (typeof this.options.choices === 'string' && (e = JSON.parse(this.options.choices)), e) : {} } } }; const o = r; const d = (n('66b1'), n('2877')); const c = Object(d.a)(o, l, a, !1, null, 'f407d216', null); t.default = c.exports }, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } } }])
// # sourceMappingURL=chunk-2a043d5e.2dbe02d9.js.map
