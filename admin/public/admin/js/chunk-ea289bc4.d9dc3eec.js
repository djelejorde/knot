(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-ea289bc4'], { '08e1' (e, t, i) {}, '233f' (e, t, i) { 'use strict'; const n = i('08e1'); const r = i.n(n); r.a }, '2c47' (e, t, i) { 'use strict'; i.r(t); const n = function () { const e = this; const t = e.$createElement; const i = e._self._c || t; return i('div', { staticClass: 'interface-one-to-many' }, [!1 === e.relationshipSetup ? i('v-notice', { attrs: { color: 'warning', icon: 'warning' } }, [e._v(' ' + e._s(e.$t('relationship_not_setup')) + ' ')]) : e.initialValue === null ? i('v-spinner') : [e.items && e.items.length ? i('div', { staticClass: 'table' }, [i('div', { staticClass: 'header' }, [i('div', { staticClass: 'row' }, [e.sortable ? i('button', { staticClass: 'sort-column', on: { click: e.toggleManualSort } }, [i('v-icon', { attrs: { name: 'sort', small: '', color: e.manualSortActive ? '--action' : '--blue-grey-300' } })], 1) : e._e(), e._l(e.visibleFields, function (t) { return i('button', { key: t.field, attrs: { type: 'button' }, on: { click (i) { return e.changeSort(t.field) } } }, [e._v(' ' + e._s(e.$helpers.formatField(t.field, t.collection)) + ' '), e.sort.field === t.field ? i('v-icon', { attrs: { name: e.sort.asc ? 'arrow_downward' : 'arrow_upward', size: 16 } }) : e._e()], 1) })], 2)]), i('draggable', { staticClass: 'body', class: { dragging: e.dragging, readonly: e.readonly }, attrs: { handle: '.drag-handle', disabled: !e.sortable || !e.manualSortActive }, on: { start (t) { e.dragging = !0 }, end (t) { e.dragging = !1 } }, model: { value: e.itemsSorted, callback (t) { e.itemsSorted = t }, expression: 'itemsSorted' } }, e._l(e.itemsSorted, function (t) { return i('div', { key: t[e.relatedPrimaryKeyField], staticClass: 'row', on: { click (i) { return e.startEdit(t[e.relatedPrimaryKeyField]) } } }, [e.sortable ? i('div', { staticClass: 'sort-column', class: { disabled: !e.manualSortActive } }, [e.readonly ? e._e() : i('v-icon', { staticClass: 'drag-handle', attrs: { name: 'drag_handle' } })], 1) : e._e(), e._l(e.visibleFields, function (e) { return i('div', { key: e.field, staticClass: 'field-preview' }, [i('v-ext-display', { attrs: { 'interface-type': e.interface, name: e.field, type: e.type, collection: e.collection, relation: e.relation, datatype: e.datatype, options: e.options, value: String(t[e.field]).startsWith('$temp_') ? null : t[e.field], values: t } })], 1) }), e.readonly ? e._e() : i('button', { staticClass: 'remove', on: { click (i) { return i.stopPropagation(), e.deleteItem(t[e.relatedPrimaryKeyField]) } } }, [i('v-icon', { attrs: { name: 'close' } })], 1)], 2) }), 0)], 1) : i('v-notice', [e._v(e._s(e.$t('no_items_selected')))]), e.readonly ? e._e() : i('div', { staticClass: 'buttons' }, [e.options.allow_create ? i('v-button', { attrs: { type: 'button', disabled: e.readonly }, on: { click: e.startAddNewItem } }, [i('v-icon', { attrs: { name: 'add', left: '' } }), e._v(' ' + e._s(e.$t('add_new')) + ' ')], 1) : e._e(), e.options.allow_select ? i('v-button', { attrs: { type: 'button', disabled: e.readonly }, on: { click (t) { e.selectExisting = !0 } } }, [i('v-icon', { attrs: { name: 'playlist_add', left: '' } }), e._v(' ' + e._s(e.$t('select_existing')) + ' ')], 1) : e._e()], 1)], e.selectExisting ? i('v-item-select', { attrs: { fields: e.visibleFieldNames, collection: e.relation.collection_many.collection, filters: [], value: e.stagedSelection || e.selectionPrimaryKeys }, on: { input: e.stageSelection, done: e.closeSelection, cancel: e.cancelSelection } }) : e._e(), e.editItem ? i('portal', { attrs: { to: 'modal' } }, [i('v-modal', { attrs: { title: e.addNew ? e.$t('creating_item') : e.$t('editing_item'), buttons: { save: { text: e.$t('save'), color: 'accent' } } }, on: { close: e.closeEditItem, save: e.saveEditItem } }, [i('div', { staticClass: 'edit-modal-body' }, [i('v-form', { attrs: { 'new-item': '', fields: e.relatedCollectionFields, collection: e.relation.collection_many.collection, 'primary-key': e.editItem[e.relatedPrimaryKeyField] || '+', values: e.editItem }, on: { 'stage-value': e.stageValue } })], 1)])], 1) : e._e()], 2) }; const r = []; const a = (i('a4d3'), i('99af'), i('4de4'), i('7db0'), i('4160'), i('caad'), i('a15b'), i('d81d'), i('fb6a'), i('e439'), i('dbb4'), i('b64b'), i('07ac'), i('ac1f'), i('2532'), i('1276'), i('2ca0'), i('498a'), i('159b'), i('2909')); const l = (i('96cf'), i('1da1')); const s = i('ade3'); const o = i('8db2'); const c = i.n(o); const d = i('8dee'); const u = i.n(d); const f = i('649d'); const m = i('2ef0'); function y (e, t) { const i = Object.keys(e); if (Object.getOwnPropertySymbols) { let n = Object.getOwnPropertySymbols(e); t && (n = n.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable })), i.push.apply(i, n) } return i } function p (e) { for (let t = 1; t < arguments.length; t++) { var i = arguments[t] != null ? arguments[t] : {}; t % 2 ? y(Object(i), !0).forEach(function (t) { Object(s.a)(e, t, i[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : y(Object(i)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t)) }) } return e } const h = { name: 'InterfaceOneToMany', mixins: [c.a], data () { return { sort: { field: null, asc: !0 }, selectExisting: !1, editItem: !1, addNew: null, dragging: !1, items: null, loading: !1, error: null, stagedSelection: null, initialValue: null } }, computed: { relationshipSetup () { return !!this.relation }, visibleFields () { const e = this; if (!1 === this.relationshipSetup) { return [] } let t; const i = this.relation.collection_many.fields; const n = this.relation.field_many.field; return this.options.fields ? (Array.isArray(this.options.fields) && (t = this.options.fields.map(function (e) { return e.trim() })), t = this.options.fields.split(',').map(function (e) { return e.trim() }), t.map(function (t) { const r = i[t]; n && t === n && (r.readonly = !0); let a = null; return r.type.toLowerCase() === 'm2o' && (a = e.$store.getters.m2o(r.collection, r.field)), r.type.toLowerCase() === 'o2m' && (a = e.$store.getters.o2m(r.collection, r.field)), r.type.toLowerCase() === 'translation' && (a = e.$store.getters.o2m(r.collection, r.field)), r.relation = a, r })) : Object.values(i).filter(function (e) { return !0 !== e.hidden_browse }).filter(function (e) { return !n || e.field !== n }).slice(0, 2) }, visibleFieldNames () { return this.visibleFields.map(function (e) { return e.field }) }, relatedPrimaryKeyField () { return Object(m.find)(this.relation.collection_many.fields, { primary_key: !0 }).field }, selectionPrimaryKeys () { const e = this; return this.items.map(function (t) { return t[e.relatedPrimaryKeyField] }) }, sortField () { const e = this.options.sort_field; return e ? Object(m.find)(this.relation.collection_many.fields, { field: e }) : null }, sortable () { return !!this.sortField }, manualSortActive () { return this.sort.field === '$manual' }, relatedCollectionFields () { const e = this.relation.collection_many.fields; const t = this.relation.field_many && this.relation.field_many.field; return Object(m.mapValues)(e, function (e) { const i = Object(m.clone)(e); return i.field === t && (i.readonly = !0), i }) }, itemsSorted: { get () { const e = this; return this.sort.field === '$manual' ? Object(m.orderBy)(Object(m.cloneDeep)(this.items), function (t) { return t[e.sortField.field] }, this.sort.asc ? 'asc' : 'desc') : Object(m.orderBy)(Object(m.cloneDeep)(this.items), function (t) { return t[e.sort.field] }, this.sort.asc ? 'asc' : 'desc') }, set (e) { const t = this; this.items = e.map(function (e, i) { return p({}, e, Object(s.a)({}, t.sortField.field, i + 1)) }) } } }, watch: { items (e, t) { t !== null && this.emitValue(e) } }, created () { const e = this; return Object(l.a)(regeneratorRuntime.mark(function t () { return regeneratorRuntime.wrap(function (t) { while (1) { switch (t.prev = t.next) { case 0:return e.sortable ? e.sort.field = '$manual' : e.visibleFieldNames && e.visibleFieldNames.length > 0 && (e.sort.field = e.visibleFieldNames[0]), t.next = 3, e.getInitialValue(); case 3:e.items = Object(m.cloneDeep)(e.initialValue) || []; case 4:case 'end':return t.stop() } } }, t) }))() }, methods: { getInitialValue () { const e = this; return Object(l.a)(regeneratorRuntime.mark(function t () { let i; return regeneratorRuntime.wrap(function (t) { while (1) { switch (t.prev = t.next) { case 0:return t.next = 2, e.$api.getItems(e.relation.collection_many.collection, { fields: '*.*', filter: Object(s.a)({}, e.relation.field_many.field, e.primaryKey) }); case 2:i = t.sent, e.initialValue = i.data; case 4:case 'end':return t.stop() } } }, t) }))() }, changeSort (e) { this.sort.field !== e ? (this.sort.asc = !0, this.sort.field = e) : this.sort.asc = !this.sort.asc }, toggleManualSort () { this.sort.field = '$manual', this.sort.asc = !0 }, startAddNewItem () { this.addNew = !0; const e = this.relation.collection_many.fields; const t = Object(m.mapValues)(e, function (e) { return e.default_value }); const i = this.relation.field_many && this.relation.field_many.field; const n = '$temp_' + u.a.generate(); t.hasOwnProperty(this.relatedPrimaryKeyField) && delete t[this.relatedPrimaryKeyField], t.hasOwnProperty(i) && delete t[i], this.items = [].concat(Object(a.a)(this.items), [p(Object(s.a)({}, this.relatedPrimaryKeyField, n), t)]), this.startEdit(n) }, stageValue (e) { const t = e.field; const i = e.value; this.$set(this.editItem, t, i) }, startEdit (e) { const t = this; return Object(l.a)(regeneratorRuntime.mark(function i () { let n, r, a, l, s; return regeneratorRuntime.wrap(function (i) { while (1) { switch (i.prev = i.next) { case 0:if (n = Object(m.cloneDeep)(t.items.find(function (i) { return i[t.relatedPrimaryKeyField] === e })), r = typeof e === 'string' && e.startsWith('$temp_'), !1 !== r) { i.next = 9; break } return a = t.relation.collection_many.collection, i.next = 6, t.$api.getItem(a, e, { fields: '*.*' }); case 6:l = i.sent, s = l.data, n = Object(m.merge)({}, s, n); case 9:t.editItem = n; case 10:case 'end':return i.stop() } } }, i) }))() }, saveEditItem () { const e = this; const t = this.editItem[this.relatedPrimaryKeyField]; const i = this.relation.field_many && this.relation.field_many.field; this.items = this.items.map(function (n) { if (n[e.relatedPrimaryKeyField] === t) { const r = Object(m.clone)(e.editItem); return r.hasOwnProperty(i) && delete r[i], r } return n }), this.editItem = null }, closeEditItem () { this.addNew && this.items.pop(), this.addNew = !1, this.editItem = null }, stageSelection (e) { this.stagedSelection = e }, closeSelection () { const e = this; return Object(l.a)(regeneratorRuntime.mark(function t () { let i, n, r, l, s; return regeneratorRuntime.wrap(function (t) { while (1) { switch (t.prev = t.next) { case 0:if (e.stagedSelection) { t.next = 3; break } return e.selectExisting = !1, t.abrupt('return'); case 3:if (i = e.stagedSelection || [], e.items = e.items.filter(function (t) { const n = t[e.relatedPrimaryKeyField]; return i.includes(n) }), n = e.items.map(function (t) { return t[e.relatedPrimaryKeyField] }), r = Object(m.difference)(i, n), !(r.length > 0)) { t.next = 13; break } return t.next = 10, e.$api.getItem(e.relation.collection_many.collection, r.join(','), { fields: '*.*.*' }); case 10:l = t.sent, s = Array.isArray(l.data) ? l.data : [l.data], e.items = [].concat(Object(a.a)(e.items), Object(a.a)(s)); case 13:e.stagedSelection = null, e.selectExisting = !1; case 15:case 'end':return t.stop() } } }, t) }))() }, cancelSelection () { this.stagedSelection = null, this.selectExisting = !1 }, deleteItem (e) { const t = this; this.items = this.items.filter(function (i) { return i[t.relatedPrimaryKeyField] !== e }) }, emitValue (e) { const t = this; e = Object(m.cloneDeep)(e); const i = this.relation.field_many.field; const n = e.map(function (e) { const n = e[t.relatedPrimaryKeyField]; const r = t.initialValue.find(function (e) { return e[t.relatedPrimaryKeyField] === n }); if (r) { const a = Object(f.diff)(r, e); if (Object(m.forEach)(a, function (i, n) { const r = t.relatedCollectionFields[n]; if (r) { const l = r.type.toLowerCase(); l !== 'json' && l !== 'translation' && l !== 'array' && l !== 'translation' && l !== 'o2m' || (a[n] = e[n]) } }), Object.keys(a).length > 0) { const l = Object(s.a)({}, t.relatedPrimaryKeyField, r[t.relatedPrimaryKeyField]); return i && l[t.relatedPrimaryKeyField].hasOwnProperty(i) && delete l[i], Object(m.merge)({}, l, a) } return null } return i && e.hasOwnProperty(i) && delete e[i], typeof e[t.relatedPrimaryKeyField] === 'string' && e[t.relatedPrimaryKeyField].startsWith('$temp_') && delete e[t.relatedPrimaryKeyField], e }).filter(function (e) { return e }); const r = this.initialValue.map(function (e) { return e[t.relatedPrimaryKeyField] }); const l = e.map(function (e) { return e[t.relatedPrimaryKeyField] }); const o = Object(m.difference)(r, l); const c = o.map(function (e) { let n, r; return t.options.delete_mode === 'relation' ? (r = {}, Object(s.a)(r, t.relatedPrimaryKeyField, e), Object(s.a)(r, i, null), r) : (n = {}, Object(s.a)(n, t.relatedPrimaryKeyField, e), Object(s.a)(n, '$delete', !0), n) }); this.$emit('input', [].concat(Object(a.a)(n), Object(a.a)(c))) } } }; const b = h; const v = (i('233f'), i('2877')); const g = Object(v.a)(b, n, r, !1, null, '75f37f4c', null); t.default = g.exports }, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } } }])
// # sourceMappingURL=chunk-ea289bc4.d9dc3eec.js.map
