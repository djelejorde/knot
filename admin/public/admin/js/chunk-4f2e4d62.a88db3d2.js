(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-4f2e4d62'], { '6ab8' (e, t, i) { 'use strict'; i.r(t); const n = function () { const e = this; const t = e.$createElement; const i = e._self._c || t; return i('div', { staticClass: 'interface-many-to-many' }, [!1 === e.relationshipSetup ? i('v-notice', { attrs: { color: 'warning', icon: 'warning' } }, [e._v(' ' + e._s(e.$t('relationship_not_setup')) + ' ')]) : e._e(), e.initialValue === null ? i('v-spinner') : [e.items && e.items.length ? i('div', { staticClass: 'table' }, [i('div', { staticClass: 'header' }, [i('div', { staticClass: 'row' }, [e.sortable ? i('button', { staticClass: 'sort-column', on: { click: e.toggleManualSort } }, [i('v-icon', { attrs: { name: 'sort', small: '', color: e.manualSortActive ? '--action' : '--blue-grey-300' } })], 1) : e._e(), i('div', { staticClass: 'preview-col' }), e._l(e.visibleFields, function (t) { return i('button', { key: t.field, attrs: { type: 'button' }, on: { click (i) { return e.changeSort(t.field) } } }, [e._v(' ' + e._s(e.$helpers.formatField(t.field, t.collection)) + ' '), e.sort.field === t.field ? i('v-icon', { attrs: { name: e.sort.asc ? 'arrow_downward' : 'arrow_upward', size: 16 } }) : e._e()], 1) })], 2)]), i('draggable', { staticClass: 'body', class: { dragging: e.dragging, readonly: e.readonly }, attrs: { handle: '.drag-handle', disabled: !e.sortable || !e.manualSortActive }, on: { start (t) { e.dragging = !0 }, end (t) { e.dragging = !1 } }, model: { value: e.itemsSorted, callback (t) { e.itemsSorted = t }, expression: 'itemsSorted' } }, e._l(e.itemsSorted, function (t) { return i('div', { key: t[e.junctionRelatedKey][e.relatedPrimaryKeyField], staticClass: 'row', on: { click (i) { return e.startEdit(t[e.junctionPrimaryKey]) } } }, [e.sortable ? i('div', { staticClass: 'sort-column', class: { disabled: !e.manualSortActive } }, [e.readonly ? e._e() : i('v-icon', { staticClass: 'drag-handle', attrs: { name: 'drag_handle' } })], 1) : e._e(), i('v-ext-display', { staticClass: 'preview-col', attrs: { 'interface-type': 'file', name: 'thumbnail', collection: 'directus_files', type: 'JSON', datatype: 'TEXT', value: t[e.junctionRelatedKey] } }), e._l(e.visibleFields, function (n) { return i('div', { key: n.field }, [i('v-ext-display', { attrs: { 'interface-type': n.interface, name: n.field, type: n.type, collection: n.collection, datatype: n.datatype, options: n.options, value: t[e.junctionRelatedKey][n.field] } })], 1) }), e.readonly ? e._e() : i('button', { staticClass: 'remove', on: { click (i) { return i.stopPropagation(), e.deleteItem(t[e.junctionPrimaryKey]) } } }, [i('v-icon', { attrs: { name: 'close' } })], 1)], 2) }), 0)], 1) : i('v-notice', [e._v(e._s(e.$t('no_items_selected')))]), e.readonly ? e._e() : i('div', { staticClass: 'buttons' }, [e.options.allow_create ? i('v-button', { attrs: { type: 'button', disabled: e.readonly }, on: { click: e.startAddNewItem } }, [i('v-icon', { attrs: { name: 'add', left: '' } }), e._v(' ' + e._s(e.$t('add_new')) + ' ')], 1) : e._e(), e.options.allow_select ? i('v-button', { attrs: { type: 'button', disabled: e.readonly }, on: { click (t) { e.selectExisting = !0 } } }, [i('v-icon', { attrs: { name: 'playlist_add', left: '' } }), e._v(' ' + e._s(e.$t('select_existing')) + ' ')], 1) : e._e()], 1)], e.selectExisting ? i('v-item-select', { attrs: { fields: e.visibleFieldNames, collection: e.relation.junction.collection_one.collection, filters: [], value: e.stagedSelection || e.selectionPrimaryKeys }, on: { input: e.stageSelection, done: e.closeSelection, cancel: e.cancelSelection } }) : e._e(), e.addNew ? i('portal', { attrs: { to: 'modal' } }, [i('v-modal', { attrs: { title: e.$t('file_upload'), buttons: { done: { text: e.$t('done') } } }, on: { done (t) { e.addNew = !1 }, close (t) { e.addNew = !1 } } }, [i('div', { staticClass: 'upload-modal-body' }, [i('v-upload', { attrs: { accept: e.options.accept }, on: { upload: e.onFileUpload } })], 1)])], 1) : e._e(), e.editItem ? i('portal', { attrs: { to: 'modal' } }, [i('v-modal', { attrs: { title: e.$t('editing_item'), buttons: { save: { text: e.$t('save'), color: 'accent' } } }, on: { close: e.closeEditItem, save: e.saveEditItem } }, [i('div', { staticClass: 'edit-modal-body' }, [i('v-form', { attrs: { 'new-item': '', fields: e.relation.junction.collection_one.fields, collection: e.relation.junction.collection_one.collection, 'primary-key': e.editItem[e.junctionRelatedKey] && e.editItem[e.junctionRelatedKey][e.relatedPrimaryKeyField] || '+', values: e.editItem[e.junctionRelatedKey] }, on: { 'stage-value': e.stageValue } })], 1)])], 1) : e._e()], 2) }; const a = []; const r = (i('a4d3'), i('99af'), i('4de4'), i('7db0'), i('4160'), i('caad'), i('a15b'), i('d81d'), i('e439'), i('dbb4'), i('b64b'), i('ac1f'), i('2532'), i('1276'), i('2ca0'), i('498a'), i('159b'), i('2909')); const l = (i('96cf'), i('1da1')); const o = i('ade3'); const c = i('8db2'); const s = i.n(c); const u = i('649d'); const d = i('8dee'); const f = i.n(d); const m = i('2ef0'); function y (e, t) { const i = Object.keys(e); if (Object.getOwnPropertySymbols) { let n = Object.getOwnPropertySymbols(e); t && (n = n.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable })), i.push.apply(i, n) } return i } function p (e) { for (let t = 1; t < arguments.length; t++) { var i = arguments[t] != null ? arguments[t] : {}; t % 2 ? y(Object(i), !0).forEach(function (t) { Object(o.a)(e, t, i[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : y(Object(i)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t)) }) } return e } const v = { name: 'InterfaceFiles', mixins: [s.a], data () { return { sort: { field: null, asc: !0 }, selectExisting: !1, editItem: !1, addNew: null, dragging: !1, items: null, loading: !1, error: null, stagedSelection: null, initialValue: null } }, computed: { relationshipSetup () { return !!this.relation }, visibleFields () { if (!1 === this.relationSetup) { return [] } if (!this.options.fields) { return [] } let e; Array.isArray(this.options.fields) && (e = this.options.fields.map(function (e) { return e.trim() })), e = this.options.fields.split(',').map(function (e) { return e.trim() }); const t = this.relation.junction.collection_one.fields; const i = Object(m.get)(this.relation, 'junction.field_one.field', null); return e.map(function (e) { const n = t[e]; return i && e === i && (n.readonly = !0), n }) }, visibleFieldNames () { return this.visibleFields.map(function (e) { return e.field }) }, relatedPrimaryKeyField () { return Object(m.find)(this.relation.junction.collection_one.fields, { primary_key: !0 }).field }, selectionPrimaryKeys () { let e; const t = this; return (e = this.items) === null || void 0 === e ? void 0 : e.map(function (e) { return e[t.junctionRelatedKey][t.relatedPrimaryKeyField] }) }, sortField () { const e = this.relation.collection_many.fields; const t = Object(m.find)(e, { type: 'sort' }); return t }, sortable () { return !!this.sortField }, manualSortActive () { return this.sort.field === '$manual' }, junctionRelatedKey () { return this.relation.junction.field_many.field }, junctionPrimaryKey () { return Object(m.find)(this.relation.junction.collection_many.fields, { primary_key: !0 }).field }, itemsSorted: { get () { const e = this; return this.sort.field === '$manual' ? Object(m.orderBy)(Object(m.cloneDeep)(this.items), function (t) { return t[e.sortField.field] }, this.sort.asc ? 'asc' : 'desc') : Object(m.orderBy)(Object(m.cloneDeep)(this.items), function (t) { return t[e.junctionRelatedKey][e.sort.field] }, this.sort.asc ? 'asc' : 'desc') }, set (e) { const t = this; this.items = e.map(function (e, i) { return p({}, e, Object(o.a)({}, t.sortField.field, i + 1)) }) } } }, watch: { items (e, t) { t === null || Object(m.isEqual)(e, t) || this.emitValue(e) } }, created () { const e = this; return Object(l.a)(regeneratorRuntime.mark(function t () { return regeneratorRuntime.wrap(function (t) { while (1) { switch (t.prev = t.next) { case 0:return e.sortable ? e.sort.field = '$manual' : e.visibleFields && e.visibleFields.length > 0 && (e.sort.field = e.visibleFields[0].field), t.next = 3, e.getInitialValue(); case 3:e.items = (Object(m.cloneDeep)(e.initialValue) || []).filter(function (t) { return t[e.junctionRelatedKey] }); case 4:case 'end':return t.stop() } } }, t) }))() }, methods: { getInitialValue () { const e = this; return Object(l.a)(regeneratorRuntime.mark(function t () { let i, n; return regeneratorRuntime.wrap(function (t) { while (1) { switch (t.prev = t.next) { case 0:return i = [e.junctionPrimaryKey, e.relation.junction_field + '.*'], t.next = 3, e.$api.getItems(e.relation.collection_many.collection, { fields: i, filter: Object(o.a)({}, e.relation.field_many.field, e.primaryKey) }); case 3:n = t.sent, e.initialValue = n.data; case 5:case 'end':return t.stop() } } }, t) }))() }, changeSort (e) { this.sort.field !== e ? (this.sort.asc = !0, this.sort.field = e) : this.sort.asc = !this.sort.asc }, startAddNewItem () { this.addNew = !0 }, onFileUpload (e) { let t; const i = this.relation.junction.collection_one.fields; const n = Object(m.mapValues)(i, function (e) { return e.default_value }); const a = '$temp_' + f.a.generate(); n.hasOwnProperty(this.relatedPrimaryKeyField) && delete n[this.relatedPrimaryKeyField], this.items = [].concat(Object(r.a)(this.items), [(t = {}, Object(o.a)(t, this.junctionPrimaryKey, a), Object(o.a)(t, this.junctionRelatedKey, e.data), t)]) }, stageValue (e) { const t = e.field; const i = e.value; this.$set(this.editItem[this.junctionRelatedKey], t, i) }, toggleManualSort () { this.sort.field = '$manual', this.sort.asc = !0 }, startEdit (e) { const t = this; return Object(l.a)(regeneratorRuntime.mark(function i () { let n, a, r, l, o, c; return regeneratorRuntime.wrap(function (i) { while (1) { switch (i.prev = i.next) { case 0:if (a = Object(m.cloneDeep)((n = t.items) === null || void 0 === n ? void 0 : n.find(function (i) { return i[t.junctionPrimaryKey] === e })), r = typeof e === 'string' && e.startsWith('$temp_'), !1 !== r) { i.next = 9; break } return l = t.relation.collection_many.collection, i.next = 6, t.$api.getItem(l, e, { fields: '*.*.*' }); case 6:o = i.sent, c = o.data, a = Object(m.merge)({}, c, a); case 9:t.editItem = a; case 10:case 'end':return i.stop() } } }, i) }))() }, saveEditItem () { let e; const t = this; const i = this.editItem[this.junctionPrimaryKey]; this.items = (e = this.items) === null || void 0 === e ? void 0 : e.map(function (e) { return e[t.junctionPrimaryKey] === i ? t.editItem : e }), this.editItem = null }, closeEditItem () { this.editItem = null }, stageSelection (e) { this.stagedSelection = e }, closeSelection () { const e = this; return Object(l.a)(regeneratorRuntime.mark(function t () { let i, n, a, l, c, s, u, d; return regeneratorRuntime.wrap(function (t) { while (1) { switch (t.prev = t.next) { case 0:return a = e.stagedSelection || [], e.items = (i = e.items) === null || void 0 === i ? void 0 : i.filter(function (t) { const i = t[e.junctionRelatedKey][e.relatedPrimaryKeyField]; return a.includes(i) }), l = (n = e.items) === null || void 0 === n ? void 0 : n.map(function (t) { return t[e.junctionRelatedKey][e.relatedPrimaryKeyField] }), c = Object(m.difference)(a, l), t.next = 6, e.$api.getItem(e.relation.junction.collection_one.collection, c.join(','), { fields: '*.*.*' }); case 6:s = t.sent, u = Array.isArray(s.data) ? s.data : [s.data], d = u === null || void 0 === u ? void 0 : u.map(function (t) { let i; const n = '$temp_' + f.a.generate(); return i = {}, Object(o.a)(i, e.junctionPrimaryKey, n), Object(o.a)(i, e.junctionRelatedKey, t), i }), e.items = [].concat(Object(r.a)(e.items), Object(r.a)(d)), e.stagedSelection = null, e.selectExisting = !1; case 12:case 'end':return t.stop() } } }, t) }))() }, cancelSelection () { this.stagedSelection = null, this.selectExisting = null }, deleteItem (e) { let t; const i = this; this.items = (t = this.items) === null || void 0 === t ? void 0 : t.filter(function (t) { const n = t[i.junctionPrimaryKey]; return n !== e }) }, emitValue (e) { const t = this; e = Object(m.cloneDeep)(e); const i = Object(m.get)(this.relation, 'junction.field_one.field', null); const n = e.map(function (e) { const n = e[t.junctionPrimaryKey]; const a = t.initialValue.find(function (e) { return e[t.junctionPrimaryKey] === n }); if (a) { const r = Object(u.diff)(a, e); if (Object.keys(r).length > 0) { let l; const c = (l = {}, Object(o.a)(l, t.junctionPrimaryKey, n), Object(o.a)(l, t.junctionRelatedKey, Object(o.a)({}, t.relatedPrimaryKeyField, a[t.junctionRelatedKey][t.relatedPrimaryKeyField])), l); return i && c[t.junctionRelatedKey].hasOwnProperty(i) && delete c[t.junctionRelatedKey][i], Object(m.merge)({}, c, r) } return null } return typeof e[t.junctionPrimaryKey] === 'string' && e[t.junctionPrimaryKey].startsWith('$temp_') ? Object(o.a)({}, t.junctionRelatedKey, Object(o.a)({}, t.relatedPrimaryKeyField, e[t.junctionRelatedKey][t.relatedPrimaryKeyField])) : e }).filter(function (e) { return e }); const a = this.initialValue.map(function (e) { return e[t.junctionPrimaryKey] }); const l = e.map(function (e) { return e[t.junctionPrimaryKey] }); const c = Object(m.difference)(a, l); const s = c.map(function (e) { let i; return i = {}, Object(o.a)(i, t.junctionPrimaryKey, e), Object(o.a)(i, '$delete', !0), i }); this.$emit('input', [].concat(Object(r.a)(n), Object(r.a)(s))) } } }; const b = v; const j = (i('8ebd'), i('2877')); const h = Object(j.a)(b, n, a, !1, null, '7aed737d', null); t.default = h.exports }, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } }, '8ebd' (e, t, i) { 'use strict'; const n = i('e74b'); const a = i.n(n); a.a }, e74b (e, t, i) {} }])
// # sourceMappingURL=chunk-4f2e4d62.a88db3d2.js.map
