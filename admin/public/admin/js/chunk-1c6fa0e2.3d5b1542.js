(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-1c6fa0e2'], { '0221' (e, t, i) { 'use strict'; i.r(t); const n = function () { const e = this; const t = e.$createElement; const i = e._self._c || t; return e.options.formatInput ? i('div', { staticClass: 'interface-container' }, [i('v-input', { staticClass: 'interface-file-size', attrs: { type: 'number', readonly: e.readonly, placeholder: e.options.placeholder, monospace: '' }, on: { input: e.calculateValue }, model: { value: e.reducedValue, callback (t) { e.reducedValue = t }, expression: 'reducedValue' } }), i('v-select', { staticClass: 'interface-file-size-units', attrs: { id: e.name, readonly: e.readonly, options: e.unitChoices, placeholder: e.options.placeholder }, on: { input: e.calculateValue }, model: { value: e.units, callback (t) { e.units = t }, expression: 'units' } })], 1) : i('div', [i('v-input', { staticClass: 'interface-file-size', attrs: { type: 'number', readonly: e.readonly, placeholder: e.options.placeholder, value: e.value }, on: { input (t) { return e.$emit('input', t) } } }), i('span', { staticClass: 'interface-file-size-formatted' }, [e._v('(' + e._s(e.formatSize(e.value, !0)) + ')')])], 1) }; const a = []; const u = i('8db2'); const r = i.n(u); const l = i('281c'); const o = { mixins: [r.a], data () { return { reducedValue: '1', units: '1', unitChoices: { 1: 'B', 1e3: 'kB', 1e6: 'MB', 1e9: 'GB', 1e12: 'TB', 1e15: 'PB', 1e18: 'EB' } } }, created () { this.value < 1e3 ? (this.reducedValue = this.value, this.units = '1') : this.value < 1e6 ? (this.reducedValue = this.value / 1e3, this.units = '1000') : this.value < 1e9 ? (this.reducedValue = this.value / 1e6, this.units = '1000000') : this.value < 1e12 ? (this.reducedValue = this.value / 1e9, this.units = '1000000000') : this.value < 1e15 ? (this.reducedValue = this.value / 1e12, this.units = '1000000000000') : this.value < 1e18 ? (this.reducedValue = this.value / 1e15, this.units = '1000000000000000') : (this.reducedValue = this.value / 1e18, this.units = '1000000000000000000') }, methods: { formatSize: l.a, calculateValue () { const e = Math.round(this.reducedValue * this.units); this.$emit('input', e) } } }; const s = o; const c = (i('174a'), i('2877')); const d = Object(c.a)(s, n, a, !1, null, 'c7e14858', null); t.default = d.exports }, 1148 (e, t, i) { 'use strict'; const n = i('a691'); const a = i('1d80'); e.exports = ''.repeat || function (e) { let t = String(a(this)); let i = ''; let u = n(e); if (u < 0 || u == 1 / 0) { throw new RangeError('Wrong number of repetitions') } for (;u > 0; (u >>>= 1) && (t += t)) { 1 & u && (i += t) } return i } }, '174a' (e, t, i) { 'use strict'; const n = i('2a27'); const a = i.n(n); a.a }, '281c' (e, t, i) { 'use strict'; i.d(t, 'a', function () { return n }); i('99af'), i('b6802'); function n () { const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; const t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]; const i = t ? 1e3 : 1024; if (!1 === Boolean(e)) { return '--' } if (Math.abs(e) < i) { return ''.concat(e, ' B') } const n = t ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'] : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']; let a = -1; let u = e; do { u /= i, a += 1 } while (Math.abs(u) >= i && a < n.length - 1); return ''.concat(u.toFixed(1), ' ').concat(n[a]) } }, '2a27' (e, t, i) {}, '408a' (e, t, i) { const n = i('c6b6'); e.exports = function (e) { if (typeof e !== 'number' && n(e) != 'Number') { throw new TypeError('Incorrect invocation') } return +e } }, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } }, b6802 (e, t, i) { 'use strict'; const n = i('23e7'); const a = i('a691'); const u = i('408a'); const r = i('1148'); const l = i('d039'); const o = 1.0.toFixed; const s = Math.floor; var c = function (e, t, i) { return t === 0 ? i : t % 2 === 1 ? c(e, t - 1, i * e) : c(e * e, t / 2, i) }; const d = function (e) { let t = 0; let i = e; while (i >= 4096) { t += 12, i /= 4096 } while (i >= 2) { t += 1, i /= 2 } return t }; const f = o && (8e-5.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || (0xDE0B6B3A7640080).toFixed(0) !== '1000000000000000128') || !l(function () { o.call({}) }); n({ target: 'Number', proto: !0, forced: f }, { toFixed (e) { let t; let i; let n; let l; let o = u(this); const f = a(e); const h = [0, 0, 0, 0, 0, 0]; let p = ''; let v = '0'; const y = function (e, t) { let i = -1; let n = t; while (++i < 6) { n += e * h[i], h[i] = n % 1e7, n = s(n / 1e7) } }; const B = function (e) { let t = 6; let i = 0; while (--t >= 0) { i += h[t], h[t] = s(i / e), i = i % e * 1e7 } }; const b = function () { let e = 6; let t = ''; while (--e >= 0) { if (t !== '' || e === 0 || h[e] !== 0) { const i = String(h[e]); t = t === '' ? i : t + r.call('0', 7 - i.length) + i } } return t }; if (f < 0 || f > 20) { throw new RangeError('Incorrect fraction digits') } if (o != o) { return 'NaN' } if (o <= -1e21 || o >= 1e21) { return String(o) } if (o < 0 && (p = '-', o = -o), o > 1e-21) { if (t = d(o * c(2, 69, 1)) - 69, i = t < 0 ? o * c(2, -t, 1) : o / c(2, t, 1), i *= 4503599627370496, t = 52 - t, t > 0) { y(0, i), n = f; while (n >= 7) { y(1e7, 0), n -= 7 }y(c(10, n, 1), 0), n = t - 1; while (n >= 23) { B(1 << 23), n -= 23 }B(1 << n), y(1, 1), B(2), v = b() } else { y(0, i), y(1 << -t, 0), v = b() + r.call('0', f) } } return f > 0 ? (l = v.length, v = p + (l <= f ? '0.' + r.call('0', f - l) + v : v.slice(0, l - f) + '.' + v.slice(l - f))) : v = p + v, v } }) } }])
// # sourceMappingURL=chunk-1c6fa0e2.3d5b1542.js.map
