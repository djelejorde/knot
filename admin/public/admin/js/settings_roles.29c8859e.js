(window.webpackJsonp = window.webpackJsonp || []).push([['settings_roles'], { 1111 (t, e, n) {}, '698c' (t, e, n) { 'use strict'; const r = n('1111'); const o = n.n(r); o.a }, efba (t, e, n) { 'use strict'; n.r(e); const r = function () { const t = this; const e = t.$createElement; const n = t._self._c || e; return n('div', { staticClass: 'settings-roles' }, [n('v-header', { attrs: { breadcrumb: t.breadcrumb, 'icon-link': '/' + t.currentProjectKey + '/settings', settings: '' } }, [n('template', { slot: 'buttons' }, [n('v-header-button', { key: 'add', attrs: { icon: 'add', 'background-color': 'button-primary-background-color', 'icon-color': 'button-primary-text-color', label: t.$t('new') }, on: { click (e) { t.addNew = !0 } } })], 1)], 2), n('v-table', { attrs: { items: t.items, columns: t.fields, 'primary-key-field': 'collection', link: '__link__' } }), t.addNew ? n('portal', { attrs: { to: 'modal' } }, [n('v-prompt', { attrs: { 'confirm-text': t.$t('create'), message: t.$t('create_role'), placeholder: t.$t('enter_role_name'), loading: t.adding, required: '' }, on: { cancel (e) { t.addNew = !1 }, confirm: t.add }, model: { value: t.newName, callback (e) { t.newName = e }, expression: 'newName' } })], 1) : t._e(), n('v-info-sidebar', { attrs: { wide: '' } }, [n('span', { staticClass: 'type-note' }, [t._v('No settings')])])], 1) }; const o = []; const i = (n('a4d3'), n('99af'), n('4de4'), n('4160'), n('d81d'), n('e439'), n('dbb4'), n('b64b'), n('159b'), n('ade3')); const a = n('d722'); const c = n('2f62'); function s (t, e) { const n = Object.keys(t); if (Object.getOwnPropertySymbols) { let r = Object.getOwnPropertySymbols(t); e && (r = r.filter(function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable })), n.push.apply(n, r) } return n } function d (t) { for (let e = 1; e < arguments.length; e++) { var n = arguments[e] != null ? arguments[e] : {}; e % 2 ? s(Object(n), !0).forEach(function (e) { Object(i.a)(t, e, n[e]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : s(Object(n)).forEach(function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)) }) } return t } const u = { name: 'SettingsRoles', metaInfo () { return { title: ''.concat(this.$t('settings'), ' | ').concat(this.$t('roles')) } }, data () { return { error: null, roles: [], adding: !1, addNew: !1, newName: '' } }, computed: d({}, Object(c.e)(['currentProjectKey']), { breadcrumb () { return [{ name: this.$t('settings'), path: '/'.concat(this.currentProjectKey, '/settings') }, { name: this.$t('roles'), path: '/'.concat(this.currentProjectKey, '/settings/roles') }] }, items () { const t = this; return this.roles.map(function (e) { return d({}, e, { __link__: '/'.concat(t.currentProjectKey, '/settings/roles/').concat(e.id) }) }) }, fields () { return [{ field: 'name', name: this.$t('name') }, { field: 'description', name: this.$t('description') }] } }), beforeRouteEnter (t, e, n) { const r = this; a.a.getRoles().then(function (t) { return t.data }).then(function (t) { n(function (e) { e.$data.roles = t }) }).catch(function (t) { r.$events.emit('error', { notify: r.$t('something_went_wrong_body'), error: t }), n(function (e) { e.$data.error = t }) }) }, methods: { add () { const t = this; this.adding = !0; const e = this.$helpers.shortid.generate(); this.$store.dispatch('loadingStart', { id: e }), this.$api.createRole({ name: this.newName }).then(function (t) { return t.data }).then(function (n) { t.$store.dispatch('loadingFinished', e), t.$router.push('/'.concat(t.currentProjectKey, '/settings/roles/').concat(n.id)) }).catch(function (n) { t.adding = !1, t.$store.dispatch('loadingFinished', e), t.$events.emit('error', { notify: t.$t('something_went_wrong_body'), error: n }) }) } } }; const l = u; const f = (n('698c'), n('2877')); const h = Object(f.a)(l, r, o, !1, null, 'e25c93f6', null); e.default = h.exports } }])
// # sourceMappingURL=settings_roles.29c8859e.js.map
