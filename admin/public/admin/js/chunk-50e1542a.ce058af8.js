(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-50e1542a'], { '6e9c' (e, t, n) {}, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } }, '9c39' (e, t, n) { 'use strict'; const l = n('6e9c'); const u = n.n(l); u.a }, cf6c (e, t, n) { 'use strict'; n.r(t); const l = function () { const e = this; const t = e.$createElement; const n = e._self._c || t; return n('div', [n('v-input', { staticClass: 'input', attrs: { maxlength: e.length, type: e.inputType, readonly: !e.newItem, value: e.value, monospace: e.options.monospace }, on: { input (t) { return e.$emit('input', t) } } }), e.newItem ? e._e() : n('span', { staticClass: 'immutable' }, [e._v(' ' + e._s(e.$t('interfaces.primary-key.immutable')) + ' ')])], 1) }; const u = []; const a = n('8db2'); const i = n.n(a); const r = { mixins: [i.a], computed: { inputType () { return this.type === 'string' ? 'text' : 'number' } } }; const p = r; const o = (n('9c39'), n('2877')); const c = Object(o.a)(p, l, u, !1, null, '63649b44', null); t.default = c.exports } }])
// # sourceMappingURL=chunk-50e1542a.ce058af8.js.map
