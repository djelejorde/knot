(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2b5a097e'], { 3977 (e, t, n) { 'use strict'; const l = n('c737'); const u = n.n(l); u.a }, 3991 (e, t, n) { 'use strict'; n.r(t); const l = function () { const e = this; const t = e.$createElement; const n = e._self._c || t; return e.userInfo ? n('div', [n('v-user-popover', { attrs: { id: this.value.id, placement: 'top' } }, [n('span', { staticClass: 'label' }, [n('div', [e._v(e._s(e.displayValue))])])])], 1) : e._e() }; const u = []; const r = n('53ca'); const a = n('8db2'); const i = n.n(a); const o = { mixins: [i.a], computed: { userInfo () { return this.value ? Object(r.a)(this.value) === 'object' ? this.value : this.$store.state.users[this.value] : null }, displayValue () { return this.$helpers.micromustache.render(this.options.template, this.userInfo) } } }; const s = o; const c = (n('3977'), n('2877')); const p = Object(c.a)(s, l, u, !1, null, '7c52a694', null); t.default = p.exports }, '53ca' (e, t, n) { 'use strict'; n.d(t, 'a', function () { return l }); n('a4d3'), n('e01a'), n('d28b'), n('e260'), n('d3b7'), n('3ca3'), n('ddb0'); function l (e) { return l = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e }, l(e) } }, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } }, c737 (e, t, n) {} }])
// # sourceMappingURL=chunk-2b5a097e.50ea325a.js.map
