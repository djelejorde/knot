(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-3bcd5d3d'], { '0bec' (e, t, l) { 'use strict'; l.r(t); const n = function () { const e = this; const t = e.$createElement; const l = e._self._c || t; return l('v-icon', { directives: [{ name: 'tooltip', rawName: 'v-tooltip.right', value: e.tooltipContents, expression: 'tooltipContents', modifiers: { right: !0 } }], attrs: { name: 'code' } }) }; const i = []; const u = l('8db2'); const r = l.n(u); const a = { mixins: [r.a], computed: { tooltipContents () { return '<pre style="font-family: var(--family-monospace);">'.concat(JSON.stringify(this.value, null, 4), '</pre>') } } }; const o = a; const p = l('2877'); const d = Object(p.a)(o, n, i, !1, null, null, null); t.default = d.exports }, '8db2' (e, t) { e.exports = { props: { id: { type: String, required: !0 }, name: { type: String, required: !0 }, value: { type: null, default: null }, type: { type: String, required: !0 }, length: { type: [String, Number], default: null }, readonly: { type: Boolean, default: !1 }, collection: { type: String, default: null }, primaryKey: { type: [Number, String], default: null }, required: { type: Boolean, default: !1 }, options: { type: Object, default: () => ({}) }, newItem: { type: Boolean, default: !1 }, relation: { type: Object, default: null }, fields: { type: Object, default: null }, values: { type: Object, default: null }, width: { type: String, default: null, validator (e) { return ['half', 'half-left', 'half-right', 'full', 'fill'].includes(e) } } } } } }])
// # sourceMappingURL=chunk-3bcd5d3d.22810c5b.js.map
